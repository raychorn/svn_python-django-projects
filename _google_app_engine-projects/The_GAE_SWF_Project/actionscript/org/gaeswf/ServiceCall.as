/*	The GAE SWF Project: 	Knowledge and tools to help you build Flash and Flex apps on Google App Engine.		Copyright (c) 2008 Aral Balkan. All Rights Reserved.	Released under the open source MIT License. See LICENSE.txt for full license terms.	ServiceCall class	=================	Tightly-coupled with the Service class. Each ServiceCall instance proxies its 	results back to the Service class which notifies listeners on the View and 	Model. 		You should not have to create ServiceCall instances manually.*/package org.gaeswf{	import flash.net.Responder;	import org.gaeswf.Service;		public class ServiceCall	{		private var responder:Responder;		private var serviceName:String = null;				public function ServiceCall(serviceName:String, args:Array)		{			// Save the service name to enable auto response.			this.serviceName = serviceName;									// Create the local responder object.			responder = new Responder(responseHandler, faultHandler);			// Add the generic responder to the service call.			args.unshift(serviceName, responder);			// Call the remote method.			Service.connection.call.apply(Service.connection, args);					}				private function responseHandler(result:Object):void		{			// trace("Service call " + serviceName + " response handler.");			Service.responseHandler(serviceName, result);		}				private function faultHandler(fault:Object):void		{			trace ("Service call " + serviceName + " fault handler.");			Service.faultHandler(serviceName, fault);		}			}}